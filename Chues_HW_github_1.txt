JSON
 1. Создать внешний репозиторий c названием JSON.
	go to https://github.com/DmitryChues --> Repositories --> New --> Repository name: JSON --> Add a README file --> Create repository
 2. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/DmitryChues/JSON.git
 3. Внутри локального JSON создать файл “new.json”.
	cd JSON/
	touch new.json
 4. Добавить файл под гит.
	git add new.json
 5. Закоммитить файл.
	git commit -m "add new.json"
 6. Отправить файл на внешний GitHub репозиторий.
	git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	vim new.json
	i (-- INSERT --)
	{
		"first_name":"Dmitry",
		"last_name":"Chues",
		"age":23,
		"pets":3,
		"salary":"5000$"
	}
	esc :wq
 8. Отправить изменения на внешний репозиторий.
	git commit -am "change new.json"
	git push
 9. Создать файл preferences.json
	touch preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	vim preferences.json
	i (-- INSERT --)
	{
        	"favorite_film":"King_Artur`s_sword",
        	"favorite_series":"Peaky_blinders",
        	"favorite_food":"Pasta",
        	"favorite_season":"Spring",
        	"country_to_visit":"Iseland"
	}
	esc :wq	
 11. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	vim skills.json
	i (-- INSERT --)
	{
        	"skills":"Basic theory","What is a client-server architecture","HTTP Methods of requests to the server", ........, "Scrum development methodology","Python"
	}
	esc :wq
 12. Отправить сразу 2 файла на внешний репозиторий.
	git add .
	git commit -m "2 new files"
	git push
 13. На веб интерфейсе создать файл bug_report.json.
	go to https://github.com/DmitryChues --> Repositories --> JSON --> Add file --> Create new file --> Name your file: bug_report.json --> 
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	click on the bug_report.json --> Edit this file --> "...bug_report..." -->
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 17. Синхронизировать внешний и локальный репозиторий JSON
	git pull


XML
 18. Создать внешний репозиторий c названием XML.
	go to https://github.com/DmitryChues --> Repositories --> New --> Repository name: XML --> Add a README file --> Create repository
 19. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/DmitryChues/XML.git
 20. Внутри локального XML создать файл “new.xml”.
	cd XML/
	touch new.xml
 21. Добавить файл под гит.
	git add new.xml
 22. Закоммитить файл.
	git commit -m "first xml"
 23. Отправить файл на внешний GitHub репозиторий.
	git push
 24. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	vim new.xml
	i (-- INSERT --)
	<?xml version="1.0" ?>
	<person>
        	<name>Chues Dmitry Aleksandrovich</name>
        	<age>23</age>
        	<pets>3</pets>
        	<salary>5000$</salary>
	</person>
	esc :wq
 25. Отправить изменения на внешний репозиторий.
	git commit -am "change new.xml"
	git push
 26. Создать файл preferences.xml
	touch preferences.xml
 27. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	vim preferences.xml
	i (-- INSERT --)
	<?xml version="1.0" ?>
	<information>
        	<favorite_film>King_Artur`s_sword</favorite_film>
        	<favorite_series>Peaky_blinders</favorite_series>
        	<favorite_food>Pasta</favorite_food>
        	<favorite_season>Spritg</favorite_season>
        	<country_to_visit>Iseland</country_to_visit>
	</information>
	esc :wq
 28. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	vim skills.xml
	<?xml version="1.0" ?>
	<skills>
	"Basic theory","What is a client-server architecture","HTTP Methods of requests to the server", ........, "Scrum development methodology","Python"
	</skills>
	esc :wq
 29. Сделать коммит в одну строку.
	git commit -am "add 2 new file xml"
 30. Отправить сразу 2 файла на внешний репозиторий.
	git push
 31. На веб интерфейсе создать файл bug_report.xml.
	go to https://github.com/DmitryChues --> Repositories --> XML --> Add file --> Create new file --> Name your file: bug_report.xml --> 
 32. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
 33. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	click on the bug_report.xml --> Edit this file --> "...bug_report..." -->
 34. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 35. Синхронизировать внешний и локальный репозиторий XML
	git pull

TXT
 36. Создать внешний репозиторий c названием TXT.
	go to https://github.com/DmitryChues --> Repositories --> New --> Repository name: TXT --> Add a README file --> Create repository
 37. Клонировать репозиторий TXT на локальный компьютер.
	git clone https://github.com/DmitryChues/TXT.git
 38. Внутри локального TXT создать файл “new.txt”.
	cd TXT/
	touch new.txt
 39. Добавить файл под гит.
	git add new.txt
 40. Закоммитить файл.
	git commit -m "first txt"
 41. Отправить файл на внешний GitHub репозиторий.
	git push
 42. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
	vim new.txt
	i (-- INSERT --)
	name: Chues Dmitry Aleksandrovich
	age: 23
	pets: 3
	salary: 5000$
	esc :wq
 43. Отправить изменения на внешний репозиторий.
	git add new.txt
	git commit -m "change new.txt"
	git push
 44. Создать файл preferences.txt
	touch preferences.txt
 45. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	vim preferences.txt
	i (-- INSERT --)
	favorite_film - "King_Artur`s_sword",
        favorite_series - "Peaky_blinders",
        favorite_food - Pasta,
        favorite_season - Spring,
        country_to_visit - Iseland
	esc :wq
 46. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
	vim skills.txt
	1. Basic theory (What is testing, bug reports, documentation, types, methods, testing directions, etc.) SDLC, STLC.
	2. What is a client-server architecture.
	.....
	26. Scrum development methodology.
	27. Python. (Learning the basics. Creating a client-server application)
	esc :wq
 47. Сделать коммит в одну строку.
	git commit -am "add 2 new file txt"
 48. Отправить сразу 2 файла на внешний репозиторий.
	git push
 49. На веб интерфейсе создать файл bug_report.txt.
	go to https://github.com/DmitryChues --> Repositories --> TXT --> Add file --> Create new file --> Name your file: bug_report.txt --> 
 50. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
 51. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
	click on the bug_report.txt --> Edit this file --> "...bug_report..." -->
 52. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 53. Синхронизировать внешний и локальный репозиторий TXT
	git pull